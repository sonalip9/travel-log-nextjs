import Head from 'next/head';
import { useCallback, useState } from 'react';

import { Button } from '@components/Button';
import { Container } from '@components/Container';
import { TextInput } from '@components/TextInput';
import { STATES } from '@defs/login';
import { login } from '@helper';
import { NavBar } from '@templates/NavBar';

export default function Login() {
  const [selectedIndex, setSelectedIndex] = useState(0);
  const [email, setEmail] = useState<string>('');
  const [password, setPassword] = useState<string>('');

  const [isLoading, setLoading] = useState<boolean>(false);

  const group = Object.values(STATES).map((key) => {
    switch (key) {
      case STATES.SIGN_IN:
        return 'Sign In';
      case STATES.SIGN_UP:
        return 'Sign Up';
      default:
        return null;
    }
  });

  const handleLogin = useCallback(() => {
    setLoading(true);
    login(selectedIndex, email, password)
      ?.catch((err) => {
        console.error('Error logging in: ', err);
      })
      ?.finally(() => {
        setLoading(false);
      });
  }, [selectedIndex, email, password]);

  return (
    <>
      <Head>
        <title>Login</title>
        <meta content="Generated by create next app" name="description" />
        <meta content="width=device-width, initial-scale=1" name="viewport" />
        <link href="/favicon.ico" rel="icon" />
      </Head>
      <main>
        <Container
          alignCenter
          flex
          fluid
          justifyCenter
          css={{ minHeight: '100vh', minWidth: '100vw' }}
          responsive={false}
        >
          <Container fluid row alignContent="flex-end" responsive={false}>
            <NavBar />
          </Container>

          <Container css={{ flex: 1 }} />

          <Container
            alignCenter
            fluid
            justifyCenter
            css={{
              backgroundColor: '$accents1',
              flexWrap: 'wrap',
              gap: '12px',
              p: '$xl',
              width: '80vw',
              '@sm': { width: '50vw' },
              '@md': { width: '40vw' },
            }}
            display="inline-flex"
          >
            <Button.Group>
              {group.map((val, index) => (
                <Button
                  key={val}
                  bordered={index === selectedIndex}
                  onPress={() => setSelectedIndex(index)}
                >
                  {val}
                </Button>
              ))}
            </Button.Group>

            <TextInput
              fullWidth
              primary
              required
              autoComplete="on"
              label="Email"
              placeholder="Please enter your email address"
              type="email"
              value={email}
              onChange={({ target: { value } }) => setEmail(value)}
            />

            <TextInput.Password
              fullWidth
              primary
              required
              label="Password"
              placeholder="Please enter your password"
              type="password"
              value={password}
              onChange={({ target: { value } }) => setPassword(value)}
            />

            <Button isLoading={isLoading} onPress={handleLogin}>
              {group[selectedIndex]}
            </Button>
          </Container>

          <Container css={{ flex: 1 }} />
        </Container>
      </main>
    </>
  );
}
