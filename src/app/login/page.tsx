'use client';
import { ButtonGroup } from '@nextui-org/react';
import Head from 'next/head';
import { useCallback, useState } from 'react';

import { Button } from '@components/Button';
import { Container } from '@components/Container';
import { PasswordInput, TextInput } from '@components/TextInput';
import { STATES } from '@defs/login';
import { login } from '@helper';
import { NavBar } from '@templates/NavBar';

export default function Login() {
  const [selectedIndex, setSelectedIndex] = useState(0);
  const [email, setEmail] = useState<string>('');
  const [password, setPassword] = useState<string>('');

  const [isLoading, setLoading] = useState<boolean>(false);

  const group = Object.values(STATES).map((key) => {
    switch (key) {
      case STATES.SIGN_IN:
        return 'Sign In';
      case STATES.SIGN_UP:
        return 'Sign Up';
      default:
        return null;
    }
  });

  const handleLogin = useCallback(() => {
    setLoading(true);
    login(selectedIndex, email, password)
      ?.catch((err) => {
        console.error('Error logging in: ', err);
      })
      ?.finally(() => {
        setLoading(false);
      });
  }, [selectedIndex, email, password]);

  return (
    <>
      <Head>
        <title>Login</title>
        <meta content="Generated by create next app" name="description" />
        <meta content="width=device-width, initial-scale=1" name="viewport" />
        <link href="/favicon.ico" rel="icon" />
      </Head>
      <main>
        <Container className="min-h-screen min-w-full bg-background">
          <Container className="min-w-full" placeItems="end">
            <NavBar />
          </Container>

          <Container className="flex-1" />

          <Container
            alignSelf="center"
            className="inline-flex w-[80vw] flex-wrap gap-lg rounded-md bg-gray-20 p-xl sm:w-[50vw] md:w-[40vw]"
            placeItems="center"
          >
            <ButtonGroup>
              {group.map((val, index) => (
                <Button
                  key={val}
                  variant={index === selectedIndex ? 'bordered' : 'solid'}
                  onPress={() => setSelectedIndex(index)}
                >
                  {val}
                </Button>
              ))}
            </ButtonGroup>

            <TextInput
              primary
              required
              autoComplete="on"
              label="Email"
              placeholder="Please enter your email address"
              type="email"
              value={email}
              variant="bordered"
              onChange={({ target: { value } }) => setEmail(value)}
            />

            <PasswordInput
              fullWidth
              primary
              required
              label="Password"
              placeholder="Please enter your password"
              type="password"
              value={password}
              variant="bordered"
              onChange={({ target: { value } }) => setPassword(value)}
            />

            <Button
              className="w-[40%]"
              color="primary"
              isLoading={isLoading}
              size="lg"
              variant="solid"
              onPress={handleLogin}
            >
              {group[selectedIndex]}
            </Button>
          </Container>

          <Container className="flex-1" />
        </Container>
      </main>
    </>
  );
}
